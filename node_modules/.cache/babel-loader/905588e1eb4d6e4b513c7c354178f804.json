{"ast":null,"code":"var _jsxFileName = \"/Users/booker/Code/why-no-werk/src/components/Login.js\";\nimport React from 'react';\nimport { CometChat } from '@cometchat-pro/chat';\nimport { NotificationManager } from 'react-notifications';\nimport loginIllustration from \"../assets/login-illustration.svg\";\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      isLoading: false\n    };\n\n    this.handleLogin = event => {\n      event.preventDefault();\n      let username = this.state.username;\n\n      if (!username) {\n        NotificationManager.error('Username must not be empty', 'Login Failed');\n        return;\n      }\n\n      this.setState({\n        isLoading: true\n      });\n      CometChat.login(username, process.env.REACT_APP_COMETCHAT_API_KEY).then(user => {\n        NotificationManager.success('You are now logged in', 'Login Success');\n        this.setState({\n          username: '',\n          isLoading: false\n        });\n        this.props.history.push({\n          pathname: '/chat',\n          state: {\n            user\n          }\n        });\n      }, error => {\n        NotificationManager.error('Please try again', 'Login Failed');\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    let _this$state = this.state,\n        username = _this$state.username,\n        isLoading = _this$state.isLoading;\n    let loadingSpinner = isLoading ? React.createElement(\"span\", {\n      className: \"fa fa-spin fa-spinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : '';\n    return React.createElement(\"div\", {\n      className: \"login-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-form-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Welcome!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Login with the username \\\"superhero1\\\" or \\\"superhero2\\\" to test this React-CometChat application. To create your own user, visit\", ' ', React.createElement(\"a\", {\n      href: \"https://prodocs.cometchat.com/reference#createuser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"our documentation\")), React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      id: \"username\",\n      placeholder: \"Enter your username\",\n      value: username,\n      onChange: event => this.setState({\n        username: event.target.value\n      }),\n      className: \"form-control\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleLogin,\n      disabled: isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"LOG IN \", loadingSpinner))), React.createElement(\"div\", {\n      className: \"login-image-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: loginIllustration,\n      alt: \"Login illustration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/booker/Code/why-no-werk/src/components/Login.js"],"names":["React","CometChat","NotificationManager","Login","Component","state","username","isLoading","handleLogin","event","preventDefault","error","setState","login","process","env","REACT_APP_COMETCHAT_API_KEY","then","user","success","props","history","push","pathname","render","loadingSpinner","target","value","loginIllustration"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { CometChat } from '@cometchat-pro/chat';\nimport { NotificationManager } from 'react-notifications';\n\nimport loginIllustration from '../assets/login-illustration.svg';\n\nclass Login extends React.Component {\n\n  state = {\n    username: '',\n    isLoading: false,\n  };\n\n  handleLogin = event => {\n    event.preventDefault();\n    let { username } = this.state;\n    if(!username){\n      NotificationManager.error('Username must not be empty', 'Login Failed');\n      return;\n    }\n    this.setState({\n      isLoading: true\n    })\n    CometChat.login(username, process.env.REACT_APP_COMETCHAT_API_KEY).then(\n      user => {\n        NotificationManager.success('You are now logged in', 'Login Success');\n        this.setState({ username: '', isLoading: false });\n        this.props.history.push({\n          pathname: '/chat',\n          state: { user }\n        })\n      },\n      error => {\n        NotificationManager.error('Please try again', 'Login Failed');\n        this.setState({\n          isLoading: false\n        })\n      }\n    );\n  };\n\n\n  render() {\n    let {username, isLoading} = this.state;\n    let loadingSpinner = isLoading? <span className=\"fa fa-spin fa-spinner\"/>  :'';\n    return (\n      <div className='login-page'>\n        <div className='login'>\n          <div className='login-container'>\n            <div className='login-form-column'>\n              <form>\n                <h3>Welcome!</h3>\n                <p>\n                  Login with the username \"superhero1\" or \"superhero2\" to test this React-CometChat application. To create your own user, visit{' '}\n                  <a href='https://prodocs.cometchat.com/reference#createuser'>\n                    our documentation\n                  </a>\n                </p>\n                <div className='form-wrapper'>\n                  <label>Username</label>\n                  <input\n                    type='text'\n                    name='username'\n                    id='username'\n                    placeholder='Enter your username'\n                    value={username}\n                    onChange={event => this.setState({ username: event.target.value })}\n                    className='form-control'\n                    required\n                  />\n                </div>\n                <button type='submit' onClick={this.handleLogin} disabled={isLoading}>\n                  LOG IN {loadingSpinner}\n                </button>\n              </form>\n            </div>\n            <div className='login-image-column'>\n              <div className='image-holder'>\n                <img src={loginIllustration} alt='Login illustration' />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}