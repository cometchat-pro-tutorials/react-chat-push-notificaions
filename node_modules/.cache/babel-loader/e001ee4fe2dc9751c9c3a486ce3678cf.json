{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyles = exports.autoPrefixAndNormalizeStyles = exports.getColors = exports.keyframes = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _keyframes;\n\nvar _inlineStylePrefixer = require(\"inline-style-prefixer\");\n\nvar _inlineStylePrefixer2 = _interopRequireDefault(_inlineStylePrefixer);\n\nvar _exenv = require(\"exenv\");\n\nvar _exenv2 = _interopRequireDefault(_exenv);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar canUseDOM = _exenv2.default.canUseDOM;\nvar KEYFRAME_PREFIX = \"__react-md-spinner-animation__\";\nvar Keyframe = {\n  ROOT_ROTATE: \"root-rotate\",\n  FILL_UNFILL_ROTATE: \"fill-unfill-rotate\",\n  LAYER_1_FADE_IN_OUT: \"layer-1-fade-in-out\",\n  LAYER_2_FADE_IN_OUT: \"layer-2-fade-in-out\",\n  LAYER_3_FADE_IN_OUT: \"layer-3-fade-in-out\",\n  LAYER_4_FADE_IN_OUT: \"layer-4-fade-in-out\",\n  LEFT_SPIN: \"left-spin\",\n  RIGHT_SPIN: \"right-spin\"\n};\nObject.keys(Keyframe).forEach(function (key) {\n  Keyframe[key] = KEYFRAME_PREFIX + Keyframe[key];\n});\nvar keyframes = exports.keyframes = (_keyframes = {}, _defineProperty(_keyframes, Keyframe.ROOT_ROTATE, {\n  to: {\n    transform: \"rotate(360deg)\"\n  }\n}), _defineProperty(_keyframes, Keyframe.FILL_UNFILL_ROTATE, {\n  \"12.5%\": {\n    transform: \"rotate(135deg)\"\n  },\n  \"25%\": {\n    transform: \"rotate(270deg)\"\n  },\n  \"37.5%\": {\n    transform: \"rotate(405deg)\"\n  },\n  \"50%\": {\n    transform: \"rotate(540deg)\"\n  },\n  \"62.5%\": {\n    transform: \"rotate(675deg)\"\n  },\n  \"75%\": {\n    transform: \"rotate(810deg)\"\n  },\n  \"87.5%\": {\n    transform: \"rotate(945deg)\"\n  },\n  to: {\n    transform: \"rotate(1080deg)\"\n  }\n}), _defineProperty(_keyframes, Keyframe.LAYER_1_FADE_IN_OUT, {\n  \"0%\": {\n    opacity: 1\n  },\n  \"25%\": {\n    opacity: 1\n  },\n  \"26%\": {\n    opacity: 0\n  },\n  \"89%\": {\n    opacity: 0\n  },\n  \"90%\": {\n    opacity: 1\n  },\n  to: {\n    opacity: 1\n  }\n}), _defineProperty(_keyframes, Keyframe.LAYER_2_FADE_IN_OUT, {\n  \"0%\": {\n    opacity: 0\n  },\n  \"15%\": {\n    opacity: 0\n  },\n  \"25%\": {\n    opacity: 1\n  },\n  \"50%\": {\n    opacity: 1\n  },\n  \"51%\": {\n    opacity: 0\n  },\n  to: {\n    opacity: 0\n  }\n}), _defineProperty(_keyframes, Keyframe.LAYER_3_FADE_IN_OUT, {\n  \"0%\": {\n    opacity: 0\n  },\n  \"40%\": {\n    opacity: 0\n  },\n  \"50%\": {\n    opacity: 1\n  },\n  \"75%\": {\n    opacity: 1\n  },\n  \"76%\": {\n    opacity: 0\n  },\n  to: {\n    opacity: 0\n  }\n}), _defineProperty(_keyframes, Keyframe.LAYER_4_FADE_IN_OUT, {\n  \"0%\": {\n    opacity: 0\n  },\n  \"65%\": {\n    opacity: 0\n  },\n  \"75%\": {\n    opacity: 1\n  },\n  \"90%\": {\n    opacity: 1\n  },\n  to: {\n    opacity: 0\n  }\n}), _defineProperty(_keyframes, Keyframe.LEFT_SPIN, {\n  from: {\n    transform: \"rotate(130deg)\"\n  },\n  \"50%\": {\n    transform: \"rotate(-5deg)\"\n  },\n  to: {\n    transform: \"rotate(130deg)\"\n  }\n}), _defineProperty(_keyframes, Keyframe.RIGHT_SPIN, {\n  from: {\n    transform: \"rotate(-130deg)\"\n  },\n  \"50%\": {\n    transform: \"rotate(5deg)\"\n  },\n  to: {\n    transform: \"rotate(-130deg)\"\n  }\n}), _keyframes);\n\nvar getColors = exports.getColors = function getColors(props) {\n  var singleColor = props.singleColor,\n      color1 = props.color1,\n      color2 = props.color2,\n      color3 = props.color3,\n      color4 = props.color4;\n  return singleColor ? [singleColor, singleColor, singleColor, singleColor] : [color1, color2, color3, color4];\n};\n\nvar autoPrefixAndNormalizeStyles = exports.autoPrefixAndNormalizeStyles = function autoPrefixAndNormalizeStyles(prefixer, styles) {\n  var isFlexBox = [\"flex\", \"inline-flex\"].indexOf(styles.hasOwnProperty(\"display\") ? styles.display : null) > -1;\n  var prefixedStyles = prefixer.prefix(styles);\n\n  if (isFlexBox) {\n    var display = prefixedStyles.display;\n    var isArray = Array.isArray(display);\n\n    if (canUseDOM) {\n      prefixedStyles.display = isArray ? display[display.length - 1] : display;\n    } else {\n      prefixedStyles.display = isArray ? display.join(\"; display: \") : display;\n    }\n  }\n\n  return prefixedStyles;\n};\n\nvar getStyles = exports.getStyles = function getStyles(props) {\n  var duration = props.duration,\n      userAgent = props.userAgent,\n      borderSize = props.borderSize;\n  var size = parseInt(props.size, 10);\n  var borderWidth = borderSize || Math.max(1, Math.round(parseInt(size, 10) * 0.107142));\n  var colors = getColors(props);\n  var arcSize = 270;\n  var arcStartRotate = 216;\n  var rootDuration = 360 * duration / (arcStartRotate + (360 - arcSize));\n  var prefixer = new _inlineStylePrefixer2.default({\n    userAgent: userAgent\n  });\n  var rootStyle = autoPrefixAndNormalizeStyles(prefixer, {\n    display: \"inline-block\",\n    position: \"relative\",\n    width: size,\n    height: size,\n    verticalAlign: \"middle\",\n    animation: Keyframe.ROOT_ROTATE + \" \" + rootDuration + \"ms linear infinite\"\n  });\n  var layerStyle = autoPrefixAndNormalizeStyles(prefixer, {\n    display: \"flex\",\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    whiteSpace: \"nowrap\",\n    animationName: Keyframe.FILL_UNFILL_ROTATE,\n    animationDuration: duration * colors.length + \"ms\",\n    animationTimingFunction: \"cubic-bezier(.4, 0, .2, 1)\",\n    animationIterationCount: \"infinite\",\n    opacity: 1\n  });\n  var layerStyles = colors.map(function (color, i) {\n    return _extends({}, layerStyle, {\n      borderColor: color,\n      animationName: Keyframe.FILL_UNFILL_ROTATE + \", \" + Keyframe[\"LAYER_\" + (i + 1) + \"_FADE_IN_OUT\"]\n    });\n  });\n  var clipStyle = autoPrefixAndNormalizeStyles(prefixer, {\n    display: \"inline-block\",\n    position: \"relative\",\n    flexGrow: 1,\n    height: \"100%\",\n    overflow: \"hidden\",\n    borderColor: \"inherit\"\n  });\n  var layerClipAfterStyle = {\n    boxSizing: \"border-box\",\n    position: \"absolute\",\n    top: 0,\n    borderRadius: \"50%\"\n  };\n  var layerAfterStyle = autoPrefixAndNormalizeStyles(prefixer, _extends({}, layerClipAfterStyle, {\n    left: \"45%\",\n    width: \"10%\",\n    borderWidth: borderWidth,\n    borderColor: \"inherit\",\n    borderTopStyle: \"solid\"\n  }));\n\n  var clipAfterStyle = _extends({}, layerClipAfterStyle, {\n    bottom: 0,\n    width: \"200%\",\n    borderWidth: borderWidth,\n    borderStyle: \"solid\",\n    animationDuration: duration + \"ms\",\n    animationTimingFunction: \"cubic-bezier(.4, 0, .2, 1)\",\n    animationIterationCount: \"infinite\"\n  });\n\n  var clip1AfterStyle = autoPrefixAndNormalizeStyles(prefixer, _extends({}, clipAfterStyle, {\n    left: 0,\n    transform: \"rotate(129deg)\",\n    animationName: Keyframe.LEFT_SPIN\n  }));\n  var clip1AfterStyles = colors.map(function (color) {\n    return _extends({}, clip1AfterStyle, {\n      borderColor: color + \" transparent transparent \" + color\n    });\n  });\n  var clip2AfterStyle = autoPrefixAndNormalizeStyles(prefixer, _extends({}, clipAfterStyle, {\n    left: \"-100%\",\n    transform: \"rotate(-129deg)\",\n    animationName: Keyframe.RIGHT_SPIN\n  }));\n  var clip2AfterStyles = colors.map(function (color) {\n    return _extends({}, clip2AfterStyle, {\n      borderColor: color + \" \" + color + \" transparent transparent\"\n    });\n  });\n  return {\n    rootStyle: rootStyle,\n    layerStyles: layerStyles,\n    layerAfterStyle: layerAfterStyle,\n    clipStyle: clipStyle,\n    clip1AfterStyles: clip1AfterStyles,\n    clip2AfterStyles: clip2AfterStyles\n  };\n};","map":null,"metadata":{},"sourceType":"script"}